{"version":3,"sources":["Component/layout/Header.js","Component/ContactItem.js","Component/AddContactForm.js","Component/ContactContainer.js","Component/page/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","ContactItem","props","state","contact","this","src","thumbnailUrl","alt","onClick","clickItem","bind","id","name","username","href","email","website","phone","deleteContact","width","aria-hidden","focusable","data-prefix","data-icon","role","viewBox","d","Component","AddContactForm","updateStateForm","e","stateName","target","stateValue","value","setState","onSubmit","preventDefault","user","newContact","addContact","action","type","placeholder","onChange","ContactContainer","contacts","filter","avatar","gravatar","url","s","r","uuid","v4","axios","get","then","res","data","newContactsWithImage","map","protocol","console","log","key","About","Fragment","App","basename","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dda2bd02.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header className=\"App-header\">\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/about/\">About</Link></li>\r\n            </ul>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header;  ","import React , { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactItem extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state ={ contact : this.props.contact };\r\n    }\r\n    \r\n    render(){\r\n        const contact = this.state.contact;\r\n\r\n        return (\r\n            <div className=\"contact-item\" >\r\n                <div className=\"img-container\">\r\n                    <img src={contact.thumbnailUrl} alt=\"avatar\"/>\r\n                </div>\r\n                <div className=\"content\" onClick={this.props.clickItem.bind(this, contact.id)}>\r\n                    <p className=\"text-center\">{contact.name}</p>\r\n                    <p className=\"\">{contact.username}</p>\r\n                    <a href={contact.email}>{contact.email}</a>\r\n                    <a href={contact.website}>{contact.website}</a>\r\n                    <a href={contact.phone}>{contact.phone}</a> \r\n                </div>\r\n                <div className=\"deleteButton\" onClick={this.props.deleteContact.bind(this, contact.id)}>\r\n                <svg width=\"30px\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"user-times\" role=\"img\" viewBox=\"0 0 640 512\"><path d=\"M589.6 240l45.6-45.6c6.3-6.3 6.3-16.5 0-22.8l-22.8-22.8c-6.3-6.3-16.5-6.3-22.8 0L544 194.4l-45.6-45.6c-6.3-6.3-16.5-6.3-22.8 0l-22.8 22.8c-6.3 6.3-6.3 16.5 0 22.8l45.6 45.6-45.6 45.6c-6.3 6.3-6.3 16.5 0 22.8l22.8 22.8c6.3 6.3 16.5 6.3 22.8 0l45.6-45.6 45.6 45.6c6.3 6.3 16.5 6.3 22.8 0l22.8-22.8c6.3-6.3 6.3-16.5 0-22.8L589.6 240zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"></path></svg>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ContactItem;","import React, { Component } from 'react';\r\n\r\nexport default class AddContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        username: '',\r\n        email:'',\r\n        website: '',\r\n        phone: '',\r\n    }\r\n\r\n    updateStateForm = (e) => {\r\n        const stateName = e.target.id;\r\n        const stateValue = e.target.value;\r\n\r\n        //console.log(stateName, stateValue);\r\n        \r\n        this.setState({[stateName] : stateValue});\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.name === \"\" || this.state.user === \"\" || this.state.email === \"\"){\r\n            return 1;\r\n        }\r\n        else{\r\n            const newContact = {\r\n                name:  this.state.name,\r\n                username: this.state.username,\r\n                email: this.state.email,\r\n                website: this.state.website,\r\n                phone: this.state.phone\r\n            }\r\n    \r\n            this.setState({\r\n                name: '',\r\n                username: '',\r\n                email:'',\r\n                website: '',\r\n                phone: '',\r\n            });\r\n\r\n            this.props.addContact(newContact);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"form-container\">\r\n                <form action=\"\" className=\"AddNewContact\" onSubmit={this.onSubmit}>\r\n                    <input \r\n                        id='name'\r\n                        type=\"text\" \r\n                        name=\"name\" \r\n                        placeholder=\"Name\" \r\n                        value={this.state.name}\r\n                        onChange={this.updateStateForm}\r\n                    />\r\n                    <input \r\n                        id='username'\r\n                        type=\"text\" \r\n                        name=\"username\" \r\n                        placeholder=\"Username\" \r\n                        value={this.state.username}\r\n                        onChange={this.updateStateForm}\r\n                    />\r\n                    <input \r\n                        id='website'\r\n                        type=\"text\" \r\n                        name=\"website\" \r\n                        placeholder=\"Website\"\r\n                        value={this.state.website}\r\n                        onChange={this.updateStateForm}\r\n                    />\r\n                    <input \r\n                        id='phone'\r\n                        type=\"text\" \r\n                        name=\"phone\" \r\n                        placeholder=\"phone\"\r\n                        value={this.state.phone}\r\n                        onChange={this.updateStateForm}\r\n                    />\r\n                    <input \r\n                        id='email'\r\n                        type=\"text\" \r\n                        name=\"email\" \r\n                        placeholder=\"Email\"\r\n                        value={this.state.email}\r\n                        onChange={this.updateStateForm}\r\n                    />\r\n\r\n                    <input \r\n                        type=\"submit\" \r\n                        value=\"New Contact\" \r\n                        className=\"btn\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport gravatar from 'gravatar';\r\n\r\nimport ContactItem from './ContactItem';\r\nimport AddContactForm from './AddContactForm';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass ContactContainer extends Component {\r\n    \r\n    state  = {\r\n        contacts : []\r\n    }\r\n\r\n    componentDidMount(){\r\n      axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then((res) => {\r\n              this.setState({contacts : res.data});\r\n              const newContactsWithImage = [...this.state.contacts.map(contact => {\r\n                const  avatar = gravatar.url(contact.email, {\r\n                  // s: size, r : rating, d: ??\r\n                  s: \"150\", r: \"g\", d : 'mm',\r\n                  // https\r\n                  protocol: 'https'\r\n                });\r\n                contact.url = avatar;\r\n                contact.thumbnailUrl = avatar;\r\n                \r\n                return contact;\r\n              })];\r\n              this.setState({contacts : newContactsWithImage});\r\n            });\r\n    }\r\n\r\n    clickItem(id){\r\n      console.log(id);\r\n    }\r\n\r\n    deleteContact = (id) => {\r\n      this.setState({ contacts : [...this.state.contacts.filter(contact => contact.id !== id)] })\r\n    }\r\n\r\n    addContact = (newContact) => {\r\n      const  avatar = gravatar.url(newContact.email, {\r\n        // s: size, r : rating, d: ??\r\n        s: \"150\", r: \"pg\", d : 'mm'\r\n      });\r\n\r\n      newContact.id = uuid.v4();\r\n      newContact.url = avatar;\r\n      newContact.thumbnailUrl = avatar;\r\n\r\n      this.setState({ contacts : [...this.state.contacts, newContact]})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n            <AddContactForm\r\n              addContact={this.addContact}\r\n            />\r\n            {\r\n              this.state.contacts.map((contact) => (\r\n                  <ContactItem \r\n                    contact={contact} \r\n                    key={contact.id} \r\n                    clickItem={this.clickItem} \r\n                    deleteContact={this.deleteContact}\r\n                  />\r\n              ))\r\n            }\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactContainer;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <React.Fragment>\r\n            <div id=\"about\" className=\"container\">\r\n                <h2>About</h2>\r\n                <p id=\"presentation\">\r\n                    This is a student projet made with React JS and it's a Progressive Web App oriented.\r\n                    <br />\r\n                    Therefore you can install this web app on your mobile phone (Android or Iphone) \r\n                </p>\r\n                <h2>How to install ?</h2>\r\n                <div className=\"content-install-instruction\">\r\n                    <h3>ANDROID</h3>\r\n                    <p>\r\n                        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Incidunt in \r\n                        doloremque voluptates ipsa recusandae enim accusamus voluptatibus fugiat itaque commodi! \r\n                        Libero, hic enim! Exercitationem consequuntur dignissimos odio impedit enim harum, placeat libero suscipit, \r\n                        porro voluptate odit architecto, pariatur maxime ratione?\r\n                    </p>\r\n                </div>\r\n                <div className=\"content-install-instruction\">\r\n                    <h3>IOS</h3>\r\n                    <p>\r\n                        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Incidunt in \r\n                        doloremque voluptates ipsa recusandae enim accusamus voluptatibus fugiat itaque commodi! \r\n                        Libero, hic enim! Exercitationem consequuntur dignissimos odio impedit enim harum, placeat libero suscipit, \r\n                        porro voluptate odit architecto, pariatur maxime ratione?\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Header from './Component/layout/Header';\r\nimport ContactContainer from './Component/ContactContainer';\r\nimport About from './Component/page/About';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/pwa-contact-manager\">\r\n      <div className=\"App\">\r\n        <h1>Contact Manager</h1>\r\n        <Header />\r\n        <Route \r\n          exact path='/' \r\n          render={props => (\r\n          <React.Fragment>\r\n            <div className=\"container\">\r\n              <ContactContainer />\r\n            </div>\r\n          </React.Fragment>\r\n          )} \r\n        />\r\n        <Route \r\n          path=\"/about/\"\r\n          component={About}\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}